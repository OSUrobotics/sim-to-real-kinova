// Auto-generated. Do not edit!

// (in-package kinova_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let JointAngles = require('./JointAngles.js');

//-----------------------------------------------------------

class ArmJointAnglesGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.angles = null;
    }
    else {
      if (initObj.hasOwnProperty('angles')) {
        this.angles = initObj.angles
      }
      else {
        this.angles = new JointAngles();
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ArmJointAnglesGoal
    // Serialize message field [angles]
    bufferOffset = JointAngles.serialize(obj.angles, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ArmJointAnglesGoal
    let len;
    let data = new ArmJointAnglesGoal(null);
    // Deserialize message field [angles]
    data.angles = JointAngles.deserialize(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 28;
  }

  static datatype() {
    // Returns string type for a message object
    return 'kinova_msgs/ArmJointAnglesGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'cadc8c9df1338a45563e10d707e71551';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Goal
    JointAngles angles
    
    ================================================================================
    MSG: kinova_msgs/JointAngles
    float32 joint1
    float32 joint2
    float32 joint3
    float32 joint4
    float32 joint5
    float32 joint6
    float32 joint7
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ArmJointAnglesGoal(null);
    if (msg.angles !== undefined) {
      resolved.angles = JointAngles.Resolve(msg.angles)
    }
    else {
      resolved.angles = new JointAngles()
    }

    return resolved;
    }
};

module.exports = ArmJointAnglesGoal;
